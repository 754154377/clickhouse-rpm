#
# RPM build specification file for Yandex ClickHouse DBMS
#
# Copyright (C) 2016 Red Soft LLC
# Copyright (C) 2017 Altinity Ltd
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# All RPMs 'magic' is described here:
# https://fedoraproject.org/wiki/How_to_create_an_RPM_package

# rpm --showrc will show you all of the macros

# Macros available:
# @CH_VERSION@="1.1.54289"
# @CH_TAG@="stable"

# CentOS 7 makes dist as ".el7.centos", we'd like to have dist=".el7", in order to use packages for RHEL as well, without renaming
%if 0%{?rhel} != 0
%define dist .el%{rhel}
%endif

Summary: Yandex ClickHouse DBMS
Name: clickhouse
Version: @CH_VERSION@
Release: 1%{?dist}
License: Apache License 2.0
Group: Applications/Databases
Source: ClickHouse-@CH_VERSION@-@CH_TAG@.zip
Url: https://clickhouse.yandex/
BuildRoot: %{_tmppath}/%{name}-%{version}-build

%description
ClickHouse is an open-source column-oriented database management
system that allows generating analytical data reports in real time.

%package server-common
Summary: Common configuration files for %{name}

%description server-common
This package contains common configuration files for ClickHouse DBMS.

%package server
Summary: %{name} server binary
Requires: %{name}-server-common = %{version}-%{release}

%description server
This package contains server binaries for ClickHouse DBMS.

%package client
Summary: %{name} client binary
Requires: %{name}-server = %{version}-%{release}
# compressor is now part of client package
Obsoletes: %{name}-compressor

%description client
This package contains client binary for ClickHouse DBMS.

%package test
Summary: %{name} test suite
Requires: %{name}-server = %{version}-%{release}

%description test
This package contains test suite for ClickHouse DBMS

##
## prep stage
##

%prep
# @CH_VERSION@="1.1.54289"
# @CH_TAG@="stable"
# Ensure source code is in BUILD/ClickHouse-%{version}-@CH_TAG@ folder
# Prepare source code for being built

# Prepare .zip release source file
# Delete BUILD/ClickHouse-%{version}-@CH_TAG@ folder, copy .zip file from SOURSES to BUILD, unpack .zip file and cd into BUILD/ClickHouse-%{version}-@CH_TAG@, which is expected to be in .zip file
%setup -q -n ClickHouse-%{version}-@CH_TAG@

# Prepare sources from 'git clone'
# Sources are already expected to be located in BUILD/ClickHouse-%{version}-@CH_TAG@
# Do not delete ClickHouse-%{version}-@CH_TAG@ folder, ido not cope, do not unpack .zip archives, just cd into BUILD/ClickHouse-%{version}-@CH_TAG@
#%setup -D -T -n ClickHouse-%{version}-@CH_TAG@

# we are in BUILD/ClickHouse-%{version}-@CH_TAG@ folder now
CH_VERSION=@CH_VERSION@
CH_VERSION_ARR=(${CH_VERSION//./ })
# prepare cmake files
# VERSION_REVISION=54289
sed -i -- "s/VERSION_REVISION .*)/VERSION_REVISION ${CH_VERSION_ARR[2]})/g"   dbms/cmake/version.cmake
# VERSION_DESCRIBE=v1.1.54289-stable
sed -i -- "s/VERSION_DESCRIBE .*)/VERSION_DESCRIBE v@CH_VERSION@-@CH_TAG@)/g" dbms/cmake/version.cmake

##
## build stage
##

%build
# we are in BUILD/ClickHouse-%{version}-@CH_TAG@ folder now

rm -rf build
mkdir build
cd build
$CMAKE .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE:STRING=Release @CMAKE_OPTIONS@
make %{?_smp_mflags}
cd ..

##
## install stage
##

%install
rm -rf %{buildroot}

cd build
DAEMONS="clickhouse clickhouse-test clickhouse-compressor clickhouse-client clickhouse-server"
for daemon in $DAEMONS; do \
        DESTDIR=%{buildroot} $CMAKE -DCOMPONENT=$daemon -P cmake_install.cmake; \
done
cd ..

# create folders structure to be distributed
mkdir -p %{buildroot}/etc/clickhouse-server
mkdir -p %{buildroot}/etc/clickhouse-client
mkdir -p %{buildroot}/etc/init.d
mkdir -p %{buildroot}/etc/cron.d
mkdir -p %{buildroot}/etc/security/limits.d/

mkdir -p %{buildroot}/usr/bin
mkdir -p %{buildroot}/usr/share/clickhouse/bin
mkdir -p %{buildroot}/usr/share/clickhouse/headers

# copy files from source into folders structure for distribution
cp %{_builddir}/%{buildsubdir}/debian/clickhouse-server.init   %{buildroot}/etc/init.d/clickhouse-server
cp %{_builddir}/%{buildsubdir}/debian/clickhouse-server.cron.d %{buildroot}/etc/cron.d/clickhouse-server
cp %{_builddir}/%{buildsubdir}/debian/clickhouse.limits        %{buildroot}/etc/security/limits.d/clickhouse.conf
cp %{_builddir}/%{buildsubdir}/dbms/src/Server/config.xml      %{buildroot}/etc/clickhouse-server/
cp %{_builddir}/%{buildsubdir}/dbms/src/Server/users.xml       %{buildroot}/etc/clickhouse-server/

##
## clean stage
##

%clean
rm -rf %{buildroot}

##
## client package
##

%files client
%config(noreplace) /etc/clickhouse-client/config.xml
/usr/bin/clickhouse-client
/usr/bin/clickhouse-local
/usr/bin/clickhouse-benchmark
/usr/bin/clickhouse-extract-from-config
/usr/bin/clickhouse-format
/usr/bin/clickhouse-compressor

%post client
# include/source spec functions
@CLICKHOUSE_SPEC_FUNCS_SH@

create_system_user $CLICKHOUSE_USER $CLICKHOUSE_GROUP $CLICKHOUSE_DATADIR

mkdir -p /etc/clickhouse-client/conf.d
chown -R ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} /etc/clickhouse-client

mkdir -p /etc/compressor/conf.d
chown -R ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} /etc/compressor

##
## server package
##

%files server
%config(noreplace) /etc/security/limits.d/clickhouse.conf
/etc/cron.d/clickhouse-server
/etc/init.d/clickhouse-server
# TODO
#/etc/systemd/system/clickhouse-server.service
/usr/bin/clickhouse
/usr/bin/clickhouse-server
/usr/bin/clickhouse-clang
/usr/bin/clickhouse-lld
# folder
/usr/share/clickhouse

%post server
if [ $1 = 1 ]; then
	/sbin/chkconfig --add clickhouse-server
#   if [ -x "/bin/systemctl" ] && [ -f /etc/systemd/system/clickhouse-server.service ]; then
#        /bin/systemctl daemon-reload
#        /bin/systemctl enable clickhouse-server
#    else
#        if [ -x "/etc/init.d/clickhouse-ser

fi

# include/source spec functions
@CLICKHOUSE_SPEC_FUNCS_SH@

create_system_user $CLICKHOUSE_USER $CLICKHOUSE_GROUP $CLICKHOUSE_DATADIR

# Ensure required folders are in place
if [ ! -d ${CLICKHOUSE_DATADIR} ]; then
	mkdir -p ${CLICKHOUSE_DATADIR}
	chown ${CLICKHOUSE_USER}:${CLICKHOUSE_GROUP} ${CLICKHOUSE_DATADIR}
	chmod 700 ${CLICKHOUSE_DATADIR}
fi

if [ ! -d ${CLICKHOUSE_LOGDIR} ]; then
	mkdir -p ${CLICKHOUSE_LOGDIR}
	chown root:${CLICKHOUSE_GROUP} ${CLICKHOUSE_LOGDIR}
	# Allow everyone to read logs, root and clickhouse to read-write
	chmod 775 ${CLICKHOUSE_LOGDIR}
fi

# Clean old dynamic compilation results
if [ -d "${CLICKHOUSE_DATADIR}/build" ]; then
	rm -f ${CLICKHOUSE_DATADIR}/build/*.cpp ${CLICKHOUSE_DATADIR}/build/*.so ||:
fi

%preun server
if [ $1 = 0 ]; then
	/sbin/service clickhouse-server stop > /dev/null 2>&1
	/sbin/chkconfig --del clickhouse-server
fi

%postun server
if [ $1 -ge 1 ]; then
	/sbin/service clickhouse-server restart >/dev/null 2>&1
fi

##
## server-common package
##

%files server-common
%config(noreplace) /etc/clickhouse-server/config.xml
%config(noreplace) /etc/clickhouse-server/users.xml

##
## test package
##

%files test
/usr/bin/clickhouse-test
/usr/bin/clickhouse-performance-test
# folder
/usr/share/clickhouse-test

##
##
##

%changelog
* Wed May 17 2017 Vadim Tkachenko
- Adjust to build 54231 release
* Fri Mar 31 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- fix issue #5 - error with creating clickhouse user
* Wed Mar 01 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54165
* Fri Feb 10 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54159
* Fri Jan 13 2017 Nikolay Samofatov <nikolay.samofatov@red-soft.biz>
- update for 1.1.54127
* Mon Nov 14 2016 Nikolay Samofatov <nikolay.samofatov@red-soft.biz> 
- create spec file

